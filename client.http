@baseUrl = http://127.0.0.1:7070

### Get Healthz
GET {{baseUrl}}/healthz HTTP/1.1
Accept: application/json

### Register user
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json

mutation RegisterUser($createUserInput: CreateUserInput!) {
  registerUser(createUserInput: $createUserInput) {
    _id
    email
    name
  }
}

{
  "createUserInput": {
    "email": "userTwo@gmail.com",
    "name": "User Two",
    "password": "Post@Ify",
    "passwordConfirm": "Post@Ify"
  }
}

### Login user
# @name userLogin
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json

mutation Login($loginUserInput: LoginUserInput!) {
  login(loginUserInput: $loginUserInput) {
    accessToken
  }
}

{
  "loginUserInput": {
    "email": "userTwo@gmail.com",
    "password": "Post@Ify"
  }
}

### Get User login token
@authToken={{userLogin.response.body.data.login.accessToken}}

### Create category
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{authToken}}

mutation CreateCategory($createCategoryInput: CreateCategoryInput!) {
  createCategory(createCategoryInput: $createCategoryInput) {
    _id
    name
  }
}

{
  "createCategoryInput": {
    "name": "Business"
  }
}

### List categories
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json

query Categories {
  categories {
    _id
    name
  }
}

### Create Post
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{authToken}}

mutation CreatePost($createPostInput: CreatePostInput!) {
  createPost(createPostInput: $createPostInput) {
    _id
    author {
      _id
      email
      name
    }
    category {
      _id
      name
    }
    content
    title
  }
}

{
  "createPostInput": {
    "categoryId": "677e29e7e15c231367201dd7",
    "content": "last time I was in the remix, now I am in the original",
    "title": "Big Remix"
  }
}

### List posts
POST {{baseUrl}}/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json
Accept: application/json

query Posts($limit: Int!, $page: Int!) {
  posts(limit: $limit, page: $page) {
    _id
    author {
      _id
      email
      name
    }
    category {
      _id
      name
    }
    content
    title
  }
}

{
  "limit": 10,
  "page": 1
}
